% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rkafka.R
\name{rkafka.createProducer}
\alias{rkafka.createProducer}
\title{Function to create Producer}
\usage{
rkafka.createProducer(
  metadataBrokerList,
  producerType = "sync",
  compressionCodec = "none",
  serializerClass = "kafka.serializer.StringEncoder",
  partitionerClass = "NULL",
  compressedTopics = "NULL",
  queueBufferingMaxTime = "NULL",
  queueBufferingMaxMessages = "NULL",
  queueEnqueueTimeoutTime = "NULL",
  batchNumMessages = "NULL"
)
}
\arguments{
\item{metadataBrokerList:String}{!!Mandatory list of brokers used for bootstrapping knowledge
              about the rest of the cluster format: host1:port1,host2:port2
              ... default:localhost:9092

     @param producerType:String
              !!Mandatory specifies whether the messages are sent
              asynchronously (async) or synchronously (sync) default:sync

     @param compressionCodec:String
              !!Mandatory specify the compression codec for all data
              generated: none , gzip, snappy. default:none

     @param serializerClass:String
              !!Mandatory message encoder
              default:kafka.serializer.StringEncoder

     @param partitionerClass:String
              --Optional name of the partitioner class for partitioning
              events; default partition spreads data randomly
              default:NULL

     @param compressedTopics:String
              --Optional allow topic level compression
                 default:NULL
     @param queueBufferingMaxTime:String
              --Optional(for Async Producer only) maximum time, in
              milliseconds, for buffering data on the producer queue
                 default:NULL
     @param queueBufferingMaxMessages:String
              --Optional(for Async Producer only) the maximum size of the
              blocking queue for buffering on the producer
                default:NULL
     @param queueEnqueueTimeoutTime:String
              --Optional(for Async Producer only) 0: events will be enqueued
              immediately or dropped if the queue is full -ve: enqueue will
              block indefinitely if the queue is full +ve: enqueue will
              block up to this many milliseconds if the queue is full
                default:NULL
     @param batchNumMessages:String
              --Optional(for Async Producer only) the number of messages
              batched at the producer
                 default:NULL
     @return returns a Properties Object containing properties for the
           Producer, to be passed to MuProducer class}
}
\description{
Function to create Producer
}
